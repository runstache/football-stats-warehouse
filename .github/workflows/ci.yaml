name: UNIT TESTS
on: push
env:
  PIPENV_VENV_IN_PROJECT: "1"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.11'
      - name: Cache Dependencies
        uses: actions/cache@v4
        id: cache-dependencies
        with:
          path: ./.venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv
      - run: pip install pipenv
      - name: Install requirements
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pipenv sync --dev
      - run: pipenv run pytest
  static_analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.11'
      - name: Cache Dependencies
        uses: actions/cache@v4
        id: cache-dependencies
        with:
          path: ./.venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv
      - run: pip install pipenv
      - name: Install requirements
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pipenv sync --dev
      - run: pipenv run mypy src/ --ignore-missing-imports
      - run: pipenv run pylint src/
      - run: pipenv run pycodestyle src/ --max-line-length 100
      - run: pipenv run bandit -r src/ -c ./pyproject.toml
    needs:
      - test